{"ast":null,"code":"var _jsxFileName = \"/Users/jessicaprice/Documents/IMD 362/uw-explorer/src/SearchCollegePage.js\";\nimport React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { Box, Container, Grid, FormControl, Select, MenuItem, InputLabel } from \"@material-ui/core\";\nimport settings from \"./config\";\n\nconst useStyles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  form: {\n    width: \"100%\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    width: 400\n  },\n  selectCampus: {\n    width: 400\n  }\n}); // SearchCollegePage - a class React component to displays a list of \"colleges\" based on\n// the user selecting from a list of campuses\n\n\nclass SearchCollegePage extends React.Component {\n  // constructor - called to initialize an instance of SearchCollegePage\n  constructor(props) {\n    super(props); // Initialize the component's store -- in this case, \"results\" is the list\n    // of colleges, \"campuses\" is the list of campuses, and \"choice\" is the current\n    // campus selected (short name)\n\n    this.state = {\n      results: null,\n      campuses: null,\n      choice: \"\"\n    }; // Bind event handlers so that they have access to \"this\"\n\n    this.handleChange = this.handleChange.bind(this);\n  } // handleChange - event handler for when the current selection of the campus\n  // drop-down selection list changes\n\n\n  handleChange(event) {\n    // Get the campus code value for search\n    const campus = event.target.value;\n    this.setState({\n      choice: campus\n    }); // Prepare for web service request\n\n    const url = settings.sws.baseURL + \"student/v5/college.json?campus_short_name=\" + campus; // Defines a header attribute used by the proxy to authenticate the request\n\n    let requestInit = {\n      headers: {\n        'Application-Id': settings.sws.applicationID\n      }\n    }; // Request the list of colleges from SWS\n\n    fetch(url, requestInit).then(res => res.json()).then(data => {\n      //                window.alert('here');\n      this.setState({\n        results: data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  } // componentDidMount - event handler called after the React framework initializes\n  // a component. Initializes the selection list of campuses\n\n\n  componentDidMount() {\n    // Request campuses from SWS\n    let url = settings.sws.baseURL + \"student/v5/campus.json\";\n    let requestInit = {\n      headers: {\n        'Application-Id': settings.sws.applicationID\n      }\n    };\n    fetch(url, requestInit).then(res => res.json()).then(data => {\n      //                window.alert('here');\n      this.setState({\n        campuses: data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    // Access the styles\n    const {\n      classes\n    } = this.props; // Render the selection list items for each campus\n\n    let list = () => this.state.campuses != null ? this.state.campuses.Campuses.map((item, key) => React.createElement(MenuItem, {\n      value: item.CampusShortName,\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, item.CampusName)) : \"\"; // Render the form input and the resulting output\n\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"University of Washington Colleges by Campus\"), React.createElement(Box, {\n      className: classes.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"select-campus-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Select Campus\"), React.createElement(Select, {\n      id: \"select-campus\",\n      labelId: \"select-campus-label\",\n      value: this.state.choice,\n      onChange: this.handleChange,\n      className: classes.selectCampus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, list()))), React.createElement(Box, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.state.results != null ? JSON.stringify(this.state.results) : \"\"));\n  }\n\n} // Assign styles to the class component\n\n\nexport default withStyles(useStyles)(SearchCollegePage);","map":{"version":3,"sources":["/Users/jessicaprice/Documents/IMD 362/uw-explorer/src/SearchCollegePage.js"],"names":["React","makeStyles","withStyles","Typography","Box","Container","Grid","FormControl","Select","MenuItem","InputLabel","settings","useStyles","theme","root","flexGrow","form","width","formControl","margin","spacing","selectCampus","SearchCollegePage","Component","constructor","props","state","results","campuses","choice","handleChange","bind","event","campus","target","value","setState","url","sws","baseURL","requestInit","headers","applicationID","fetch","then","res","json","data","catch","error","console","log","componentDidMount","render","classes","list","Campuses","map","item","key","CampusShortName","CampusName","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport {Box,Container, Grid, FormControl, Select, MenuItem,InputLabel} from \"@material-ui/core\";\nimport settings from \"./config\";\n\nconst useStyles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    form: {\n        width: \"100%\"\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        width: 400,\n    },\n    selectCampus:{\n        width: 400,\n    }\n});\n\n// SearchCollegePage - a class React component to displays a list of \"colleges\" based on\n// the user selecting from a list of campuses\nclass SearchCollegePage extends React.Component {\n\n    // constructor - called to initialize an instance of SearchCollegePage\n    constructor(props) {\n        super(props);\n\n        // Initialize the component's store -- in this case, \"results\" is the list\n        // of colleges, \"campuses\" is the list of campuses, and \"choice\" is the current\n        // campus selected (short name)\n        this.state = {results: null, campuses: null, choice: \"\"};\n\n        // Bind event handlers so that they have access to \"this\"\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    // handleChange - event handler for when the current selection of the campus\n    // drop-down selection list changes\n    handleChange(event) {\n\n        // Get the campus code value for search\n        const campus = event.target.value;\n        this.setState({choice: campus});\n\n        // Prepare for web service request\n        const url =  settings.sws.baseURL + \"student/v5/college.json?campus_short_name=\" + campus;\n\n        // Defines a header attribute used by the proxy to authenticate the request\n        let requestInit = {\n            headers: {\n                'Application-Id': settings.sws.applicationID\n            },\n        };\n\n        // Request the list of colleges from SWS\n        fetch(url, requestInit)\n            .then(res => res.json())\n            .then((data) => {\n                //                window.alert('here');\n                this.setState({ results: data });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n\n    // componentDidMount - event handler called after the React framework initializes\n    // a component. Initializes the selection list of campuses\n    componentDidMount() {\n\n        // Request campuses from SWS\n        let url = settings.sws.baseURL + \"student/v5/campus.json\";\n        let requestInit = {\n            headers: {\n                'Application-Id': settings.sws.applicationID\n            },\n        };\n        fetch(url, requestInit)\n            .then(res => res.json())\n            .then((data) => {\n                //                window.alert('here');\n                this.setState({ campuses: data });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n\n    render() {\n        // Access the styles\n        const {classes} = this.props;\n\n        // Render the selection list items for each campus\n        let list = () => (this.state.campuses != null) ? this.state.campuses.Campuses.map((item, key) =>\n                (<MenuItem value={item.CampusShortName} key={key}>{item.CampusName}</MenuItem>)\n            ) : \"\";\n\n        // Render the form input and the resulting output\n        return (\n            <Container>\n                <Typography variant=\"h6\">\n                    University of Washington Colleges by Campus\n                </Typography>\n                <Box className={classes.form}>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id={\"select-campus-label\"}>Select Campus</InputLabel>\n                        <Select id={\"select-campus\"} labelId={\"select-campus-label\"} value={this.state.choice}\n                            onChange={this.handleChange} className={classes.selectCampus}>\n                            {list()}\n                        </Select>\n                    </FormControl>\n                </Box>\n                <Box>\n                    {(this.state.results != null)? JSON.stringify(this.state.results) : \"\"}\n                </Box>\n            </Container>\n        );\n    }\n}\n\n// Assign styles to the class component\nexport default withStyles(useStyles)(SearchCollegePage);\n"]},"metadata":{},"sourceType":"module"}