{"ast":null,"code":"var _jsxFileName = \"/Users/jessicaprice/Documents/IMD 362/uw-explorer/src/CampusView.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { Container, Grid } from \"@material-ui/core\";\nimport settings from \"./config\"; // CampusView - a class React component to display a list of campuses retrieved from the\n// UW SWS web service (campus.json)\n\nexport default class CampusView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: null\n    };\n  } // componentDidMount - a React event handler called when the React framework has initialized\n  // the component and is ready to ready it. This handler is used to cause data to be consumed\n  // from a web service\n\n\n  componentDidMount() {\n    // Initialize call to a web service. The config.json file contains default settings for\n    // this application to use rather than hard-code these into component source files.\n    let url = settings.sws.baseURL + \"/student/v5/campus.json\"; // Add a header containing a custom header used by the proxy to authenticate this call\n\n    let requestInit = {\n      headers: {\n        'Application-Id': settings.sws.applicationID\n      }\n    }; // Call SWS web service and process results using promises that handle the asynchronous\n    // aspects of the call-- that is the code waits on the previous code as completed through\n    // the \"then\" phrases. Note that \"fetch\" makes the AJAX call to the web service.\n\n    fetch(url, requestInit).then(res => res.json()).then(data => {\n      // Update the state of this component so that the data retrieved will be rendered\n      this.setState({\n        results: data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    // Render the data (in this case JSON from SWS campus service) using conditional\n    // and iteration\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"University of Washington Campuses\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.results != null ? this.state.results.Campuses.map((item, key) => React.createElement(\"li\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, item.CampusName)) : \"Waiting...\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/jessicaprice/Documents/IMD 362/uw-explorer/src/CampusView.js"],"names":["React","makeStyles","Typography","Container","Grid","settings","CampusView","Component","constructor","props","state","results","componentDidMount","url","sws","baseURL","requestInit","headers","applicationID","fetch","then","res","json","data","setState","catch","error","console","log","render","Campuses","map","item","key","CampusName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,SAAR,EAAmBC,IAAnB,QAA8B,mBAA9B;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAEA;AACA;;AACA,eAAe,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AAEpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAb;AACH,GALmD,CAOpD;AACA;AACA;;;AACAC,EAAAA,iBAAiB,GAAG;AAEhB;AACA;AACA,QAAIC,GAAG,GAAGR,QAAQ,CAACS,GAAT,CAAaC,OAAb,GAAuB,yBAAjC,CAJgB,CAMhB;;AACA,QAAIC,WAAW,GAAG;AAChBC,MAAAA,OAAO,EAAE;AACP,0BAAkBZ,QAAQ,CAACS,GAAT,CAAaI;AADxB;AADO,KAAlB,CAPgB,CAahB;AACA;AACA;;AACAC,IAAAA,KAAK,CAACN,GAAD,EAAMG,WAAN,CAAL,CACKI,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACZ;AACA,WAAKC,QAAL,CAAc;AAAEb,QAAAA,OAAO,EAAEY;AAAX,OAAd;AACH,KALL,EAMIE,KANJ,CAMWC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KARJ;AASH;;AAEDG,EAAAA,MAAM,GAAG;AACL;AACA;AACA,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKnB,KAAL,CAAWC,OAAX,IAAsB,IAAvB,GAA+B,KAAKD,KAAL,CAAWC,OAAX,CAAmBmB,QAAnB,CAA4BC,GAA5B,CAAgC,CAACC,IAAD,EAAOC,GAAP,KAC3D;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeD,IAAI,CAACE,UAApB,CAD2B,CAA/B,GAEG,YAHJ,CADJ,CAJJ,CADJ;AAcH;;AAtDmD","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport {Container, Grid} from \"@material-ui/core\";\nimport settings from \"./config\";\n\n// CampusView - a class React component to display a list of campuses retrieved from the\n// UW SWS web service (campus.json)\nexport default class CampusView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {results: null};\n    }\n\n    // componentDidMount - a React event handler called when the React framework has initialized\n    // the component and is ready to ready it. This handler is used to cause data to be consumed\n    // from a web service\n    componentDidMount() {\n\n        // Initialize call to a web service. The config.json file contains default settings for\n        // this application to use rather than hard-code these into component source files.\n        let url = settings.sws.baseURL + \"/student/v5/campus.json\";\n\n        // Add a header containing a custom header used by the proxy to authenticate this call\n        let requestInit = {\n          headers: {\n            'Application-Id': settings.sws.applicationID\n          },\n        };\n\n        // Call SWS web service and process results using promises that handle the asynchronous\n        // aspects of the call-- that is the code waits on the previous code as completed through\n        // the \"then\" phrases. Note that \"fetch\" makes the AJAX call to the web service.\n        fetch(url, requestInit)\n            .then(res => res.json())\n            .then((data) => {\n                // Update the state of this component so that the data retrieved will be rendered\n                this.setState({ results: data });\n            })\n           .catch((error) => {\n               console.log(error);\n           });\n    }\n\n    render() {\n        // Render the data (in this case JSON from SWS campus service) using conditional\n        // and iteration\n        return (\n            <Container>\n                <Typography variant=\"h6\">\n                    University of Washington Campuses\n                </Typography>\n                <div>\n                    <ul>\n                    {(this.state.results != null) ? this.state.results.Campuses.map((item, key) =>\n                        (<li key={key}>{item.CampusName}</li>)\n                    ) : \"Waiting...\"}\n                    </ul>\n                </div>\n            </Container>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}